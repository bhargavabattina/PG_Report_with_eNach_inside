{"uid":"ddf99751e4846cfb","name":"Calculation Testing | Scenario=S13 | Mode=RuPay Credit Card | Slab=1-1000 | Amount=700","fullName":"testCases.eNach_test.TestCalculations#test_calculation_amount","historyId":"908ceda5ab25a195705ca3f0d8e18921","time":{"start":1758854793310,"stop":1758854805020,"duration":11710},"status":"failed","statusMessage":"Failed: Payment Aborted message found on screen","statusTrace":"self = <testCases.eNach_test.TestCalculations object at 0x0000028A830CFD80>, page_with_screenshot = <Page url='https://securetest.sabpaisa.in/ClientTest/callBackV1Prod'>\nscenario = 'S13', payment_mode = 'RuPay Credit Card', slab = '1-1000', amount = 700, excel_client_code = 'DJ050', excel_environment = 'STAGING', ensure_db_updated = None\n\n    @allure.story(\"e-Nach Calculation\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.ui\n    @pytest.mark.regression\n    def test_calculation_amount(self, page_with_screenshot, scenario, payment_mode, slab, amount, excel_client_code,\n                                excel_environment, ensure_db_updated):\n        logger = LogGen.loggen(\"Calculation\")\n        \"\"\"Test the cancel transaction button functionality.\"\"\"\n        timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        allure.dynamic.title(\n            f\"Calculation Testing | Scenario={scenario} | Mode={payment_mode} | Slab={slab} | Amount={amount}\"\n        )\n        logger.info(f\"--- Starting calculation Test for {scenario} | {payment_mode} | {slab} | {amount} ---\")\n    \n        bill_amount = conv_charges = total_amount = txn_id = \"N/A\"\n        status = \"Fail\"\n    \n        try:\n            if payment_mode == \"UPI INTENT\":\n                viewport_size = {\"width\": 375, \"height\": 667}  # Example: iPhone-like dimensions\n                page_with_screenshot.set_viewport_size(viewport_size)\n                logger.info(\n                    f\"Set viewport size to {viewport_size['width']}x{viewport_size['height']} for UPI INTENT mode\")\n                allure.attach(page_with_screenshot.screenshot(), name=\"UPI Intent Initial Viewport\",\n                              attachment_type=allure.attachment_type.PNG)\n    \n    \n            # Initialize page objects\n            client = ClientPage(page_with_screenshot)\n            client_details = ClientDetailsPage(page_with_screenshot)\n            pg = PaymentGatewayPage(page_with_screenshot)\n            pg_response = PaymentGatewayResponsePage(page_with_screenshot)\n    \n            # Fill and verify client and payer details\n            fill_and_verify_client_details(self.logger, client, client_details, excel_client_code, excel_environment)\n            fill_payer_details(\n                logger, client_details, ReadConfig.get_payer_first_name(),\n                ReadConfig.get_payer_last_name(), str(amount), ReadConfig.get_payer_phone(),\n                ReadConfig.get_payer_email()\n            )\n    \n            # Get transaction ID\n            with allure.step(f\"Accessing the Client_txn_id\"):\n                txn_id = client_details.get_value(\"_client_transaction_id\")\n                allure.attach(txn_id, name=f\"Client Transaction ID for {excel_client_code}\",\n                              attachment_type=allure.attachment_type.TEXT)\n    \n            # Click Pay button\n            with allure.step(\"Clicking Pay Button\"):\n                logger.info(\"Clicking Pay button\")\n                client_details.click(\"_pay_btn\")\n    \n            time.sleep(5)\n    \n            # Handle payment mode and get amounts\n            bill_amount, conv_charges, total_amount = self._handle_payment_mode(pg, payment_mode, logger)\n    \n    \n            #time.sleep(10)\n    \n            # Handle failure for specific scenario and slab\n            # if scenario in [\"S8\", \"S13\", \"S16\", \"S24\", \"S21\"] and slab == \"5001-10000\":\n            #     status = \"Fail\"\n            #     with allure.step(\"transaction is aborted for scenario and slab\"):\n            #         allure.attach(\n            #             f\"Scenario={scenario}, Slab={slab} is restricted → marking as Fail\",\n            #             name=\"Failure\",\n            #             attachment_type=allure.attachment_type.TEXT\n            #         )\n            #     pytest.fail(f\"Scenario={scenario}, Slab={slab} →  test as failed \")\n    \n            # \uD83D\uDD39 Call the Payment Aborted check here\n>           status = self._check_payment_aborted(page_with_screenshot)\n\ntestCases\\eNach_test.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testCases.eNach_test.TestCalculations object at 0x0000028A830CFD80>, page = <Page url='https://securetest.sabpaisa.in/ClientTest/callBackV1Prod'>\n\n    def _check_payment_aborted(self, page):\n        \"\"\"Helper to check if Payment Aborted message appears.\"\"\"\n        locator = page.locator(\"//h1[normalize-space()='Payment Aborted']\")\n        try:\n            locator.wait_for(state=\"visible\", timeout=10000)\n            with allure.step(\"Payment Aborted message appeared → Test Failed\"):\n                allure.attach(\"Payment Aborted element found\",\n                              name=\"Failure Reason\",\n                              attachment_type=allure.attachment_type.TEXT)\n>           pytest.fail(\"Payment Aborted message found on screen\")\nE           Failed: Payment Aborted message found on screen\n\ntestCases\\eNach_test.py:111: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"attach_test_timestamp","time":{"start":1758854789594,"stop":1758854789597,"duration":3},"status":"passed","steps":[],"attachments":[{"uid":"7484bbe27e69993e","name":"Test Execution Timestamp","source":"7484bbe27e69993e.txt","type":"text/plain","size":19}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"browser","time":{"start":1758854789597,"stop":1758854790991,"duration":1394},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"page","time":{"start":1758854790991,"stop":1758854793307,"duration":2316},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"page_with_screenshot","time":{"start":1758854793307,"stop":1758854793307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"ensure_db_updated","time":{"start":1758854793308,"stop":1758854793310,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Failed: Payment Aborted message found on screen","statusTrace":"self = <testCases.eNach_test.TestCalculations object at 0x0000028A830CFD80>, page_with_screenshot = <Page url='https://securetest.sabpaisa.in/ClientTest/callBackV1Prod'>\nscenario = 'S13', payment_mode = 'RuPay Credit Card', slab = '1-1000', amount = 700, excel_client_code = 'DJ050', excel_environment = 'STAGING', ensure_db_updated = None\n\n    @allure.story(\"e-Nach Calculation\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.ui\n    @pytest.mark.regression\n    def test_calculation_amount(self, page_with_screenshot, scenario, payment_mode, slab, amount, excel_client_code,\n                                excel_environment, ensure_db_updated):\n        logger = LogGen.loggen(\"Calculation\")\n        \"\"\"Test the cancel transaction button functionality.\"\"\"\n        timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        allure.dynamic.title(\n            f\"Calculation Testing | Scenario={scenario} | Mode={payment_mode} | Slab={slab} | Amount={amount}\"\n        )\n        logger.info(f\"--- Starting calculation Test for {scenario} | {payment_mode} | {slab} | {amount} ---\")\n    \n        bill_amount = conv_charges = total_amount = txn_id = \"N/A\"\n        status = \"Fail\"\n    \n        try:\n            if payment_mode == \"UPI INTENT\":\n                viewport_size = {\"width\": 375, \"height\": 667}  # Example: iPhone-like dimensions\n                page_with_screenshot.set_viewport_size(viewport_size)\n                logger.info(\n                    f\"Set viewport size to {viewport_size['width']}x{viewport_size['height']} for UPI INTENT mode\")\n                allure.attach(page_with_screenshot.screenshot(), name=\"UPI Intent Initial Viewport\",\n                              attachment_type=allure.attachment_type.PNG)\n    \n    \n            # Initialize page objects\n            client = ClientPage(page_with_screenshot)\n            client_details = ClientDetailsPage(page_with_screenshot)\n            pg = PaymentGatewayPage(page_with_screenshot)\n            pg_response = PaymentGatewayResponsePage(page_with_screenshot)\n    \n            # Fill and verify client and payer details\n            fill_and_verify_client_details(self.logger, client, client_details, excel_client_code, excel_environment)\n            fill_payer_details(\n                logger, client_details, ReadConfig.get_payer_first_name(),\n                ReadConfig.get_payer_last_name(), str(amount), ReadConfig.get_payer_phone(),\n                ReadConfig.get_payer_email()\n            )\n    \n            # Get transaction ID\n            with allure.step(f\"Accessing the Client_txn_id\"):\n                txn_id = client_details.get_value(\"_client_transaction_id\")\n                allure.attach(txn_id, name=f\"Client Transaction ID for {excel_client_code}\",\n                              attachment_type=allure.attachment_type.TEXT)\n    \n            # Click Pay button\n            with allure.step(\"Clicking Pay Button\"):\n                logger.info(\"Clicking Pay button\")\n                client_details.click(\"_pay_btn\")\n    \n            time.sleep(5)\n    \n            # Handle payment mode and get amounts\n            bill_amount, conv_charges, total_amount = self._handle_payment_mode(pg, payment_mode, logger)\n    \n    \n            #time.sleep(10)\n    \n            # Handle failure for specific scenario and slab\n            # if scenario in [\"S8\", \"S13\", \"S16\", \"S24\", \"S21\"] and slab == \"5001-10000\":\n            #     status = \"Fail\"\n            #     with allure.step(\"transaction is aborted for scenario and slab\"):\n            #         allure.attach(\n            #             f\"Scenario={scenario}, Slab={slab} is restricted → marking as Fail\",\n            #             name=\"Failure\",\n            #             attachment_type=allure.attachment_type.TEXT\n            #         )\n            #     pytest.fail(f\"Scenario={scenario}, Slab={slab} →  test as failed \")\n    \n            # \uD83D\uDD39 Call the Payment Aborted check here\n>           status = self._check_payment_aborted(page_with_screenshot)\n\ntestCases\\eNach_test.py:193: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testCases.eNach_test.TestCalculations object at 0x0000028A830CFD80>, page = <Page url='https://securetest.sabpaisa.in/ClientTest/callBackV1Prod'>\n\n    def _check_payment_aborted(self, page):\n        \"\"\"Helper to check if Payment Aborted message appears.\"\"\"\n        locator = page.locator(\"//h1[normalize-space()='Payment Aborted']\")\n        try:\n            locator.wait_for(state=\"visible\", timeout=10000)\n            with allure.step(\"Payment Aborted message appeared → Test Failed\"):\n                allure.attach(\"Payment Aborted element found\",\n                              name=\"Failure Reason\",\n                              attachment_type=allure.attachment_type.TEXT)\n>           pytest.fail(\"Payment Aborted message found on screen\")\nE           Failed: Payment Aborted message found on screen\n\ntestCases\\eNach_test.py:111: Failed","steps":[{"name":"Filling and verifying client details","time":{"start":1758854793312,"stop":1758854794090,"duration":778},"status":"passed","steps":[{"name":"Filling Client Code : DJ050","time":{"start":1758854793312,"stop":1758854793395,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Selecting Environment : STAGING","time":{"start":1758854793395,"stop":1758854793432,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Clicking Show Detail","time":{"start":1758854793432,"stop":1758854794005,"duration":573},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Verifying if Payer Name is visible","time":{"start":1758854794005,"stop":1758854794090,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"attachments":[],"parameters":[{"name":"logger","value":"<RootLogger root (DEBUG)>"},{"name":"client","value":"<pageObjects.client_page.ClientPage object at 0x0000028A831C2090>"},{"name":"client_details","value":"<pageObjects.client_details_page.ClientDetailsPage object at 0x0000028A831EB4D0>"},{"name":"client_code","value":"'DJ050'"},{"name":"environment","value":"'STAGING'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":4,"attachmentStep":false,"hasContent":true},{"name":"Filling payer details","time":{"start":1758854794090,"stop":1758854794336,"duration":246},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"logger","value":"<RootLogger root (DEBUG)>"},{"name":"client_details","value":"<pageObjects.client_details_page.ClientDetailsPage object at 0x0000028A831EB4D0>"},{"name":"firstname","value":"'Bhargava'"},{"name":"lastname","value":"'Battina'"},{"name":"amount","value":"'700'"},{"name":"mobilenumber","value":"'1234567890'"},{"name":"email","value":"'test@sabpaisa.in'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Accessing the Client_txn_id","time":{"start":1758854794336,"stop":1758854794374,"duration":38},"status":"passed","steps":[],"attachments":[{"uid":"41c3bb74a4c1f5d8","name":"Client Transaction ID for DJ050","source":"41c3bb74a4c1f5d8.txt","type":"text/plain","size":22}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"Clicking Pay Button","time":{"start":1758854794374,"stop":1758854795193,"duration":819},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"Payment Aborted message appeared → Test Failed","time":{"start":1758854804918,"stop":1758854804922,"duration":4},"status":"passed","steps":[],"attachments":[{"uid":"6e3626746e8299f0","name":"Failure Reason","source":"6e3626746e8299f0.txt","type":"text/plain","size":29}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[{"uid":"bde2c4d1cc0a952a","name":"log","source":"bde2c4d1cc0a952a.txt","type":"text/plain","size":77}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"stepsCount":9,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"ensure_db_updated::0","time":{"start":1758854805056,"stop":1758854805056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"page_with_screenshot::0","time":{"start":1758854805080,"stop":1758854808944,"duration":3864},"status":"passed","steps":[],"attachments":[{"uid":"4ede8fdb128d9a2d","name":"Screenshot","source":"4ede8fdb128d9a2d.png","type":"image/png","size":248729},{"uid":"70fc44a2a9ec09f5","name":"Test Video","source":"70fc44a2a9ec09f5.webm","type":"video/webm","size":545974}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},{"name":"page::0","time":{"start":1758854808946,"stop":1758854808946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"browser::0","time":{"start":1758854808947,"stop":1758854808962,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"epic","value":"Payment Gateway"},{"name":"story","value":"e-Nach Calculation"},{"name":"severity","value":"critical"},{"name":"tag","value":"regression"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"eNach_test"},{"name":"subSuite","value":"TestCalculations"},{"name":"host","value":"SRS-CL-009"},{"name":"thread","value":"23876-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.eNach_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"amount","value":"700"},{"name":"excel_client_code","value":"'DJ050'"},{"name":"excel_environment","value":"'STAGING'"},{"name":"payment_mode","value":"'RuPay Credit Card'"},{"name":"scenario","value":"'S13'"},{"name":"slab","value":"'1-1000'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["ui","regression"]},"source":"ddf99751e4846cfb.json","parameterValues":["700","'DJ050'","'STAGING'","'RuPay Credit Card'","'S13'","'1-1000'"]}